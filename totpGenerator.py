import pyotp,qrcode


# Generates a secret key for creating/validating TOTP for specific users
def generateTOTP():

#Generated secret key is used to create a TOTP and the provisioning URL is made out of it
    secret=pyotp.random_base32()
    totp=pyotp.TOTP(secret)
    url=totp.provisioning_uri(name="SmartHomeControll",issuer_name="Gstark")
    
# The provisioning URL is used to generate QR-code and the QR code needs to be scanned with the Google Authenticator application for Sharing the secret keys between them    
    img=qrcode.make(url)
    img.show()
    return secret

# Used to verify the correctness of the OTP provided by the user by comparing it with the OTP generated by the secret_key
def verifyOTP(secret_key,otp):

    current_otp=pyotp.TOTP(secret_key)
    if current_otp.now()==otp:
        return True
    else:
        return False

